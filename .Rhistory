# ------------BOOTSTRAPPING RESULTS --------------------------------------------
set.seed(100)  # For reproducibility
model_function <- function(data, indices) {
sample_data <- data[indices, ]
model <- lm(log(impa_oi) ~ age + I(age^2), data = sample_data)
return(coef(model))
}
boot_model_salary2 <- boot(db2, model_function, R = 1000)
# BOOTSTRAP STANDAR ERRORS
boot_se <- apply(boot_model_salary2$t, 2, sd)
# ------------ EXPORTING TO LATEX R --------------------------------------------
stargazer( model_salary, model_salary,
type = "latex",se = list(summary(model_salary)$coefficients[, 2], boot_se),
title = "Monthly Income Salary Relation with Age",
covariate.labels = c("Intercept", "Age", "Age Squared"),
dep.var.labels = "Labor Monthly Income*",
column.labels = c("MCO", "Bootstrap"),
star.cutoffs = c(0.1, 0.05, 0.01),
ci = TRUE,
ci.level = 0.95,
out = "Salary and Age.tex",
notes = c("Statistical significance levels: *** p<0.01, ** p<0.05, * p<0.1."),
add.lines = list(c("Method", "MCO", "Bootstrap")
)
)
# ------------ BOOTSTRAPPING FOR PEAK AGE --------------------------------------
peak_age_f <- function(data, indices) {
sample_data <- data[indices, ]
model <- lm(log(impa_oi) ~ age + I(age^2), data = sample_data)
coef_model <- coef(model)
peak_age <- -coef_model["age"] / (2 * coef_model["I(age^2)"])
return(peak_age)
}
set.seed(100)
boot_peak_age <- boot(db2, peak_age_f, R = 1000)
peak_age_ci <- boot.ci(boot_peak_age, type = "perc")
print(peak_age_ci)
# ------------ PLOTTING THE AGE-EARNINGS PROFILE -------------------------------
# ------> FUNCTION FOR PEAK AGE
peak_age_f <- function(data, indices) {
sample_data <- data[indices, ]
model <- lm(log(impa_oi) ~ age + I(age^2), data = sample_data)
coef_model <- coef(model)
peak_age <- -coef_model["age"] / (2 * coef_model["I(age^2)"])
return(peak_age)
}
# ------> BOOTSTRAP
boot_peak_age <- boot(db2, peak_age_f, R = 1000)
peak_age_ci <- boot.ci(boot_peak_age, type = "perc")
original_peak_age <- peak_age_f(db2, 1:nrow(db2))
# ------> PREDICTION:
# ------> ORGANIZE BY AGES AND PREDICT SALARY
age_values <- seq(min(db2$age), max(db2$age), by = 1)
predicted_earnings <- predict(model_salary, newdata = data.frame(age = age_values))
predicted_earnings_P <- data.frame(age = age_values, log_salary = predicted_earnings)
ggplot(predicted_earnings_P, aes(x = age, y = log_salary)) +
geom_line(color = "#1f77b4", size = 1.2, linetype = "solid") +
geom_vline(xintercept = original_peak_age, color = "blue", linetype = "longdash", size = 1) +
geom_vline(xintercept = peak_age_ci$percent[4], color = "gray", linetype = "dashed", size = 1) +
geom_vline(xintercept = peak_age_ci$percent[5], color = "gray", linetype = "dashed", size = 1) +
labs(
x = "Age",
y = "Log(Monthly Income Salary)",
subtitle = paste("Peak Age:", round(original_peak_age, 2),
"95% CI [",
round(peak_age_ci$percent[4], 2), ",",
round(peak_age_ci$percent[5], 2), "]")
) +
theme_minimal(base_size = 14) +
theme(
plot.title = element_text(face = "bold", size = 16, hjust = 0.5),
plot.subtitle = element_text(size = 14, hjust = 0.5, color = "gray40"),
axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
panel.grid.major = element_line(color = "gray85"),
panel.grid.minor = element_line(color = "gray90")
)
# ------------ RUNNING THE REGRESSION ------------------------------------------
model_salary <- lm(log(impa_oi) ~ age + I(age^2), data = db2)
summary(model_salary)
# ------------ EVALUATING RESIDUALS --------------------------------------------
png("3.1 Salary vs Age.png", width = 800, height = 600)
par(mfrow = c(2, 2))
plot(model_salary)
dev.off()
# Is age^2 worth it? Yes it is jeje
model_salary2 <- lm(log(y_salary_m) ~ age, data = db2)
anova(model_salary , model_salary2)
# ------------BOOTSTRAPPING RESULTS --------------------------------------------
set.seed(100)  # For reproducibility
model_function <- function(data, indices) {
sample_data <- data[indices, ]
model <- lm(log(impa_oi) ~ age + I(age^2), data = sample_data)
return(coef(model))
}
boot_model_salary2 <- boot(db2, model_function, R = 1000)
# BOOTSTRAP STANDAR ERRORS
boot_se <- apply(boot_model_salary2$t, 2, sd)
# ------------ EXPORTING TO LATEX R --------------------------------------------
stargazer( model_salary, model_salary,
type = "latex",se = list(summary(model_salary)$coefficients[, 2], boot_se),
title = "Monthly Income Salary Relation with Age",
covariate.labels = c("Intercept", "Age", "Age Squared"),
dep.var.labels = "Labor Monthly Income*",
column.labels = c("MCO", "Bootstrap"),
star.cutoffs = c(0.1, 0.05, 0.01),
ci = TRUE,
ci.level = 0.95,
out = "Salary and Age.tex",
notes = c("Statistical significance levels: *** p<0.01, ** p<0.05, * p<0.1."),
add.lines = list(c("Method", "MCO", "Bootstrap")
)
)
# ------------ BOOTSTRAPPING FOR PEAK AGE --------------------------------------
peak_age_f <- function(data, indices) {
sample_data <- data[indices, ]
model <- lm(log(impa_oi) ~ age + I(age^2), data = sample_data)
coef_model <- coef(model)
peak_age <- -coef_model["age"] / (2 * coef_model["I(age^2)"])
return(peak_age)
}
set.seed(100)
boot_peak_age <- boot(db2, peak_age_f, R = 1000)
peak_age_ci <- boot.ci(boot_peak_age, type = "perc")
print(peak_age_ci)
# ------------ PLOTTING THE AGE-EARNINGS PROFILE -------------------------------
# ------> FUNCTION FOR PEAK AGE
peak_age_f <- function(data, indices) {
sample_data <- data[indices, ]
model <- lm(log(impa_oi) ~ age + I(age^2), data = sample_data)
coef_model <- coef(model)
peak_age <- -coef_model["age"] / (2 * coef_model["I(age^2)"])
return(peak_age)
}
# ------> BOOTSTRAP
boot_peak_age <- boot(db2, peak_age_f, R = 1000)
peak_age_ci <- boot.ci(boot_peak_age, type = "perc")
original_peak_age <- peak_age_f(db2, 1:nrow(db2))
# ------> PREDICTION:
# ------> ORGANIZE BY AGES AND PREDICT SALARY
age_values <- seq(min(db2$age), max(db2$age), by = 1)
predicted_earnings <- predict(model_salary, newdata = data.frame(age = age_values))
predicted_earnings_P <- data.frame(age = age_values, log_salary = predicted_earnings)
ggplot(predicted_earnings_P, aes(x = age, y = exp(log_salary))) +
geom_line(color = "#1f77b4", size = 1.2, linetype = "solid") +
geom_vline(xintercept = original_peak_age, color = "blue", linetype = "longdash", size = 1) +
geom_vline(xintercept = peak_age_ci$percent[4], color = "gray", linetype = "dashed", size = 1) +
geom_vline(xintercept = peak_age_ci$percent[5], color = "gray", linetype = "dashed", size = 1) +
labs(
x = "Age",
y = "Log(Monthly Income Salary)",
subtitle = paste("Peak Age:", round(original_peak_age, 2),
"95% CI [",
round(peak_age_ci$percent[4], 2), ",",
round(peak_age_ci$percent[5], 2), "]")
) +
theme_minimal(base_size = 14) +
theme(
plot.title = element_text(face = "bold", size = 16, hjust = 0.5),
plot.subtitle = element_text(size = 14, hjust = 0.5, color = "gray40"),
axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
panel.grid.major = element_line(color = "gray85"),
panel.grid.minor = element_line(color = "gray90")
)
View(boot_peak_age)
# ------------ RUNNING THE REGRESSION ------------------------------------------
model_salary <- lm(log(impa_oi) ~ age + I(age^2), data = db2)
summary(model_salary)
# ------------ EVALUATING RESIDUALS --------------------------------------------
png("3.1 Salary vs Age.png", width = 800, height = 600)
par(mfrow = c(2, 2))
plot(model_salary)
dev.off()
# Is age^2 worth it? Yes it is jeje
model_salary2 <- lm(log(y_salary_m) ~ age, data = db2)
anova(model_salary , model_salary2)
# ------------BOOTSTRAPPING RESULTS --------------------------------------------
set.seed(100)  # For reproducibility
model_function <- function(data, indices) {
sample_data <- data[indices, ]
model <- lm(log(impa_oi) ~ age + I(age^2), data = sample_data)
return(coef(model))
}
boot_model_salary2 <- boot(db2, model_function, R = 1000)
# BOOTSTRAP STANDAR ERRORS
boot_se <- apply(boot_model_salary2$t, 2, sd)
# ------------ EXPORTING TO LATEX R --------------------------------------------
stargazer( model_salary, model_salary,
type = "latex",se = list(summary(model_salary)$coefficients[, 2], boot_se),
title = "Monthly Income Salary Relation with Age",
covariate.labels = c("Intercept", "Age", "Age Squared"),
dep.var.labels = "Labor Monthly Income*",
column.labels = c("MCO", "Bootstrap"),
star.cutoffs = c(0.1, 0.05, 0.01),
ci = TRUE,
ci.level = 0.95,
out = "Salary and Age.tex",
notes = c("Statistical significance levels: *** p<0.01, ** p<0.05, * p<0.1."),
add.lines = list(c("Method", "MCO", "Bootstrap")
)
)
# ------------ BOOTSTRAPPING FOR PEAK AGE --------------------------------------
peak_age_f <- function(data, indices) {
sample_data <- data[indices, ]
model <- lm(log(impa_oi) ~ age + I(age^2), data = sample_data)
coef_model <- coef(model)
peak_age <- -coef_model["age"] / (2 * coef_model["I(age^2)"])
return(peak_age)
}
set.seed(100)
boot_peak_age <- boot(db2, peak_age_f, R = 1000)
peak_age_ci <- boot.ci(boot_peak_age, type = "perc")
print(peak_age_ci)
# ------------ PLOTTING THE AGE-EARNINGS PROFILE -------------------------------
# ------> FUNCTION FOR PEAK AGE
peak_age_f <- function(data, indices) {
sample_data <- data[indices, ]
model <- lm(log(impa_oi) ~ age + I(age^2), data = sample_data)
coef_model <- coef(model)
peak_age <- -coef_model["age"] / (2 * coef_model["I(age^2)"])
return(peak_age)
}
# ------> BOOTSTRAP
boot_peak_age <- boot(db2, peak_age_f, R = 1000)
peak_age_ci <- boot.ci(boot_peak_age, type = "perc")
original_peak_age <- peak_age_f(db2, 1:nrow(db2))
# ------> PREDICTION:
# ------> ORGANIZE BY AGES AND PREDICT SALARY
age_values <- seq(min(db2$age), max(db2$age), by = 1)
predicted_earnings <- predict(model_salary, newdata = data.frame(age = age_values))
predicted_earnings_P <- data.frame(age = age_values, log_salary = predicted_earnings)
ggplot(predicted_earnings_P, aes(x = age, y = exp(log_salary))) +
geom_line(color = "#1f77b4", size = 1.2, linetype = "solid") +
geom_vline(xintercept = original_peak_age, color = "blue", linetype = "longdash", size = 1) +
geom_vline(xintercept = peak_age_ci$percent[4], color = "gray", linetype = "dashed", size = 1) +
geom_vline(xintercept = peak_age_ci$percent[5], color = "gray", linetype = "dashed", size = 1) +
labs(
x = "Age",
y = "Log(Monthly Income Salary)",
subtitle = paste("Peak Age:", round(original_peak_age, 2),
"95% CI [",
round(peak_age_ci$percent[4], 2), ",",
round(peak_age_ci$percent[5], 2), "]")
) +
theme_minimal(base_size = 14) +
theme(
plot.title = element_text(face = "bold", size = 16, hjust = 0.5),
plot.subtitle = element_text(size = 14, hjust = 0.5, color = "gray40"),
axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
panel.grid.major = element_line(color = "gray85"),
panel.grid.minor = element_line(color = "gray90")
)
View(predicted_earnings_P)
predicted_earnings_P <- data.frame(age = age_values, log_salary = predicted_earnings, salary = exp(predicted_earnings))
ggplot(predicted_earnings_P, aes(x = age, y = log_salary)) +
geom_line(color = "#1f77b4", size = 1.2, linetype = "solid") +
geom_vline(xintercept = original_peak_age, color = "blue", linetype = "longdash", size = 1) +
geom_vline(xintercept = peak_age_ci$percent[4], color = "gray", linetype = "dashed", size = 1) +
geom_vline(xintercept = peak_age_ci$percent[5], color = "gray", linetype = "dashed", size = 1) +
labs(
x = "Age",
y = "Log(Monthly Income Salary)",
subtitle = paste("Peak Age:", round(original_peak_age, 2),
"95% CI [",
round(peak_age_ci$percent[4], 2), ",",
round(peak_age_ci$percent[5], 2), "]")
) +
theme_minimal(base_size = 14) +
theme(
plot.title = element_text(face = "bold", size = 16, hjust = 0.5),
plot.subtitle = element_text(size = 14, hjust = 0.5, color = "gray40"),
axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
panel.grid.major = element_line(color = "gray85"),
panel.grid.minor = element_line(color = "gray90")
)
age_values <- seq(min(db2$age), max(db2$age), by = 1)
predicted_earnings <- predict(model_salary, newdata = data.frame(age = age_values))
predicted_earnings_P <- data.frame(age = age_values, log_salary = predicted_earnings, salary = exp(predicted_earnings))
ggplot(predicted_earnings_P, aes(x = age, y = log_salary)) +
geom_line(color = "#1f77b4", size = 1.2, linetype = "solid") +
geom_vline(xintercept = original_peak_age, color = "blue", linetype = "longdash", size = 1) +
geom_vline(xintercept = peak_age_ci$percent[4], color = "gray", linetype = "dashed", size = 1) +
geom_vline(xintercept = peak_age_ci$percent[5], color = "gray", linetype = "dashed", size = 1) +
labs(
x = "Age",
y = "Log(Monthly Income Salary)",
subtitle = paste("Peak Age:", round(original_peak_age, 2),
"95% CI [",
round(peak_age_ci$percent[4], 2), ",",
round(peak_age_ci$percent[5], 2), "]")
) +
theme_minimal(base_size = 14) +
theme(
plot.title = element_text(face = "bold", size = 16, hjust = 0.5),
plot.subtitle = element_text(size = 14, hjust = 0.5, color = "gray40"),
axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
panel.grid.major = element_line(color = "gray85"),
panel.grid.minor = element_line(color = "gray90")
)
ggsave("3.1PEAKAGE.png", plot = grap, width = 20, height = 10)
# ------------ RUNNING THE REGRESSION ------------------------------------------
model_salary <- lm(log(impa_oi) ~ age + I(age^2), data = db2)
summary(model_salary)
# ------------ EVALUATING RESIDUALS --------------------------------------------
png("3.1 Salary vs Age.png", width = 800, height = 600)
par(mfrow = c(2, 2))
plot(model_salary)
dev.off()
# Is age^2 worth it? Yes it is jeje
model_salary2 <- lm(log(y_salary_m) ~ age, data = db2)
anova(model_salary , model_salary2)
# ------------BOOTSTRAPPING RESULTS --------------------------------------------
set.seed(100)  # For reproducibility
model_function <- function(data, indices) {
sample_data <- data[indices, ]
model <- lm(log(impa_oi) ~ age + I(age^2), data = sample_data)
return(coef(model))
}
boot_model_salary2 <- boot(db2, model_function, R = 1000)
# BOOTSTRAP STANDAR ERRORS
boot_se <- apply(boot_model_salary2$t, 2, sd)
# ------------ EXPORTING TO LATEX R --------------------------------------------
stargazer( model_salary, model_salary,
type = "latex",se = list(summary(model_salary)$coefficients[, 2], boot_se),
title = "Monthly Income Salary Relation with Age",
covariate.labels = c("Intercept", "Age", "Age Squared"),
dep.var.labels = "Labor Monthly Income*",
column.labels = c("MCO", "Bootstrap"),
star.cutoffs = c(0.1, 0.05, 0.01),
ci = TRUE,
ci.level = 0.95,
out = "Salary and Age.tex",
notes = c("Statistical significance levels: *** p<0.01, ** p<0.05, * p<0.1."),
add.lines = list(c("Method", "MCO", "Bootstrap")
)
)
# ------------ BOOTSTRAPPING FOR PEAK AGE --------------------------------------
peak_age_f <- function(data, indices) {
sample_data <- data[indices, ]
model <- lm(log(impa_oi) ~ age + I(age^2), data = sample_data)
coef_model <- coef(model)
peak_age <- -coef_model["age"] / (2 * coef_model["I(age^2)"])
return(peak_age)
}
set.seed(100)
boot_peak_age <- boot(db2, peak_age_f, R = 1000)
peak_age_ci <- boot.ci(boot_peak_age, type = "perc")
print(peak_age_ci)
# ------------ PLOTTING THE AGE-EARNINGS PROFILE -------------------------------
# ------> FUNCTION FOR PEAK AGE
peak_age_f <- function(data, indices) {
sample_data <- data[indices, ]
model <- lm(log(impa_oi) ~ age + I(age^2), data = sample_data)
coef_model <- coef(model)
peak_age <- -coef_model["age"] / (2 * coef_model["I(age^2)"])
return(peak_age)
}
# ------> BOOTSTRAP
boot_peak_age <- boot(db2, peak_age_f, R = 1000)
peak_age_ci <- boot.ci(boot_peak_age, type = "perc")
original_peak_age <- peak_age_f(db2, 1:nrow(db2))
# ------> PREDICTION:
# ------> ORGANIZE BY AGES AND PREDICT SALARY
age_values <- seq(min(db2$age), max(db2$age), by = 1)
predicted_earnings <- predict(model_salary, newdata = data.frame(age = age_values))
predicted_earnings_P <- data.frame(age = age_values, log_salary = predicted_earnings, salary = exp(predicted_earnings))
ggplot(predicted_earnings_P, aes(x = age, y = log_salary)) +
geom_line(color = "#1f77b4", size = 1.2, linetype = "solid") +
geom_vline(xintercept = original_peak_age, color = "blue", linetype = "longdash", size = 1) +
geom_vline(xintercept = peak_age_ci$percent[4], color = "gray", linetype = "dashed", size = 1) +
geom_vline(xintercept = peak_age_ci$percent[5], color = "gray", linetype = "dashed", size = 1) +
labs(
x = "Age",
y = "Log(Monthly Income Salary)",
subtitle = paste("Peak Age:", round(original_peak_age, 2),
"95% CI [",
round(peak_age_ci$percent[4], 2), ",",
round(peak_age_ci$percent[5], 2), "]")
) +
theme_minimal(base_size = 14) +
theme(
plot.title = element_text(face = "bold", size = 16, hjust = 0.5),
plot.subtitle = element_text(size = 14, hjust = 0.5, color = "gray40"),
axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
panel.grid.major = element_line(color = "gray85"),
panel.grid.minor = element_line(color = "gray90")
)
ggsave("3.1PEAKAGE.png", plot = grap, width = 20, height = 10)
ggsave("3.1PEAKAGE.png", plot = grap, width = 20, height = 10)
PEAK_AGE <- ggplot(predicted_earnings_P, aes(x = age, y = log_salary)) +
geom_line(color = "#1f77b4", size = 1.2, linetype = "solid") +
geom_vline(xintercept = original_peak_age, color = "blue", linetype = "longdash", size = 1) +
geom_vline(xintercept = peak_age_ci$percent[4], color = "gray", linetype = "dashed", size = 1) +
geom_vline(xintercept = peak_age_ci$percent[5], color = "gray", linetype = "dashed", size = 1) +
labs(
x = "Age",
y = "Log(Monthly Income Salary)",
subtitle = paste("Peak Age:", round(original_peak_age, 2),
"95% CI [",
round(peak_age_ci$percent[4], 2), ",",
round(peak_age_ci$percent[5], 2), "]")
) +
theme_minimal(base_size = 14) +
theme(
plot.title = element_text(face = "bold", size = 16, hjust = 0.5),
plot.subtitle = element_text(size = 14, hjust = 0.5, color = "gray40"),
axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
panel.grid.major = element_line(color = "gray85"),
panel.grid.minor = element_line(color = "gray90")
)
ggsave("3.1PEAKAGE.png", plot = PEAK_AGE, width = 20, height = 10)
PEAK_AGE <- ggplot(predicted_earnings_P, aes(x = age, y = log_salary)) +
geom_line(color = "#1f77b4", size = 1.2, linetype = "solid") +
geom_vline(xintercept = original_peak_age, color = "blue", linetype = "longdash", size = 1) +
geom_vline(xintercept = peak_age_ci$percent[4], color = "gray", linetype = "dashed", size = 1) +
geom_vline(xintercept = peak_age_ci$percent[5], color = "gray", linetype = "dashed", size = 1) +
labs(
x = "Age",
y = "Log(Monthly Income Salary)",
subtitle = paste("Peak Age:", round(original_peak_age, 2),
"95% CI [",
round(peak_age_ci$percent[4], 2), ",",
round(peak_age_ci$percent[5], 2), "]")
) +
theme_minimal(base_size = 18) +  # Increase base font size
theme(
plot.title = element_text(face = "bold", size = 20, hjust = 0.5),
plot.subtitle = element_text(size = 18, hjust = 0.5, color = "gray40"),
axis.title = element_text(size = 18),
axis.text = element_text(size = 16),
panel.grid.major = element_line(color = "gray85"),
panel.grid.minor = element_line(color = "gray90")
) +
annotate("text", x = original_peak_age, y = max(predicted_earnings_P$log_salary),
label = paste("Peak Age:", round(original_peak_age, 2)),
color = "blue", size = 6, angle = 90, vjust = -0.5) +
annotate("text", x = peak_age_ci$percent[4], y = max(predicted_earnings_P$log_salary) * 0.9,
label = paste("CI Lower:", round(peak_age_ci$percent[4], 2)),
color = "gray40", size = 5, angle = 90, vjust = -0.5) +
annotate("text", x = peak_age_ci$percent[5], y = max(predicted_earnings_P$log_salary) * 0.9,
label = paste("CI Upper:", round(peak_age_ci$percent[5], 2)),
color = "gray40", size = 5, angle = 90, vjust = -0.5)
ggsave("3.1PEAKAGE.png", plot = PEAK_AGE, width = 20, height = 10)
age_values <- seq(min(db2$age), max(db2$age), by = 1)
predicted_earnings <- predict(model_salary, newdata = data.frame(age = age_values))
predicted_earnings_P <- data.frame(age = age_values, log_salary = predicted_earnings, salary = exp(predicted_earnings))
PEAK_AGE <- ggplot(predicted_earnings_P, aes(x = age, y = log_salary)) +
geom_line(color = "#1f77b4", size = 1.2, linetype = "solid") +
geom_vline(xintercept = original_peak_age, color = "blue", linetype = "longdash", size = 1) +
geom_vline(xintercept = peak_age_ci$percent[4], color = "gray", linetype = "dashed", size = 1) +
geom_vline(xintercept = peak_age_ci$percent[5], color = "gray", linetype = "dashed", size = 1) +
labs(
x = "Age",
y = "Log(Monthly Income Salary)",
subtitle = paste("Peak Age:", round(original_peak_age, 2),
"95% CI [",
round(peak_age_ci$percent[4], 2), ",",
round(peak_age_ci$percent[5], 2), "]")
) +
theme_minimal(base_size = 18) +  # Increase base font size
theme(
plot.title = element_text(face = "bold", size = 20, hjust = 0.5),
plot.subtitle = element_text(size = 18, hjust = 0.5, color = "gray40"),
axis.title = element_text(size = 18),
axis.text = element_text(size = 16),
panel.grid.major = element_line(color = "gray85"),
panel.grid.minor = element_line(color = "gray90")
) +
annotate("text", x = original_peak_age, y = max(predicted_earnings_P$log_salary),
label = paste("Peak Age:", round(original_peak_age, 2)),
color = "blue", size = 6, angle = 90, vjust = -0.5) +
annotate("text", x = peak_age_ci$percent[4], y = max(predicted_earnings_P$log_salary) * 0.9,
label = paste("CI Lower:", round(peak_age_ci$percent[4], 2)),
color = "gray40", size = 5, angle = 90, vjust = -0.5) +
annotate("text", x = peak_age_ci$percent[5], y = max(predicted_earnings_P$log_salary) * 0.9,
label = paste("CI Upper:", round(peak_age_ci$percent[5], 2)),
color = "gray40", size = 5, angle = 90, vjust = -0.5)
ggsave("3.1PEAKAGE.png", plot = PEAK_AGE)
ggsave("3.1PEAKAGE.png", plot = PEAK_AGE, width = 7, height = 10)
ggsave("3.1PEAKAGE.png", plot = PEAK_AGE, width = 10, height = 7)
PEAK_AGE <- ggplot(predicted_earnings_P, aes(x = age, y = log_salary)) +
geom_line(color = "#1f77b4", size = 1.2, linetype = "solid") +
geom_vline(xintercept = original_peak_age, color = "blue", linetype = "longdash", size = 1) +
geom_vline(xintercept = peak_age_ci$percent[4], color = "gray", linetype = "dashed", size = 1) +
geom_vline(xintercept = peak_age_ci$percent[5], color = "gray", linetype = "dashed", size = 1) +
labs(
x = "Age",
y = "Log(Monthly Income Salary)",
subtitle = paste("Peak Age:", round(original_peak_age, 2),
"95% CI [",
round(peak_age_ci$percent[4], 2), ",",
round(peak_age_ci$percent[5], 2), "]")
) +
theme_minimal(base_size = 18) +  # Increase base font size
theme(
plot.title = element_text(face = "bold", size = 20, hjust = 0.5),
plot.subtitle = element_text(size = 18, hjust = 0.5, color = "gray40"),
axis.title = element_text(size = 18),
axis.text = element_text(size = 16),
panel.grid.major = element_line(color = "gray85"),
panel.grid.minor = element_line(color = "gray90")
)
ggsave("3.1PEAKAGE.png", plot = PEAK_AGE, width = 10, height = 7)
View(predicted_earnings_P)
max(predicted_earnings_P$salary)
View(predicted_earnings_P)
